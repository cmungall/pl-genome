:- use_module(library(semweb/rdfs)).

write_module :-
        write_header,
        write_body.


write_header :-
        format('%% <module> SO~n'),
        format('% Autogenerated by make_so_schema~n',[]),
        nl,
        setof(N/1,feature_class(N),Exports),
        writep( (:- module(so,Exports)) ),
        writep( (:- use_module(semweb(rdf_db))) ),
        writep( (:- use_module(semweb(rdfs))) ),
        nl.

%        forall(inf_op(M,F,Opts),
%               writep( (:- op(300,xfy,F)) )).
        
write_body :-
        forall(feature_class(C,Pred),
               write_pred(C,Pred)).

write_pred(C,Pred) :-
        format('~q(X) :- rdfs_individual_of(X,~q).~n',[Pred,C]).
        %Clause = ((Head:-Body)),
        %Head =.. [Pred,X],
        

ont_label(X,Label) :- rdfs_label(X,Label),!.
ont_label(X,Label) :- rdf(X,rdfs:label,S),S=literal(type(_,Label)).

feature_class(Pred) :-
        feature_class(_,Pred).
feature_class(C,Label) :-
        sf(Root),
        rdfs_subclass_of(C,Root),
        safe_label(C,Label_1),
        replace_reserved(Label_1,Label).


safe_label(C,Safe) :-
        ont_label(C,Label),
        downcase_atom(Label,R1),
        concat_atom(L,'-',R1),
        concat_atom(L,'_',Safe).

replace_reserved(X,Y) :-
        reserved(X),
        !,
        atom_concat(so_,X,Y).
replace_reserved(X,X).

reserved(read).


sf('http://purl.obolibrary.org/obo/SO_0000110').

writep(X):- writeq(X),write('.'),nl.

